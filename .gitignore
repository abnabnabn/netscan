# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class
*.old
# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# Poetry
poetry.lock
.poetry_cache

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# pytest
.pytest_cache/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/

# coverage reports
.coverage
htmlcov/

# type hints
*.pyi

# Cython
*.c

# Distribution / packaging
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
.hypothesis/
.pytest_cache/

# pyproject.toml (if not using poetry)
# If you're *not* using poetry, you might have a pyproject.toml.
# It's generally OK to commit this, but if you have build-related
# settings in it that are machine-specific, you might want to ignore it.
# pyproject.toml

# VS Code
.vscode/

# Data files (Generally, exclude data files, especially if large or sensitive)
# *.csv
# *.json
# *.sqlite
# *.db

# Configuration files that might contain sensitive information
config/.secrets.toml

# OS generated files
.DS_Store
Thumbs.db

# Bytecode
*.pyc

#Log files
*.log

test/*.*
device_data.json*
